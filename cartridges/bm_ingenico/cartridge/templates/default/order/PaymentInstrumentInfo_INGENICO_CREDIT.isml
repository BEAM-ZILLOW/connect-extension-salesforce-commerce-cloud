<!--- TEMPLATENAME: PaymentInstrumentInfo_INGENICO_CREDIT.isml --->
<iscontent type="text/html" charset="UTF-8" compact="true"/>
<iscomment>
    Shows the details of an Ingenico transaction within the payment tab of an order.
</iscomment>
<isscript>
    var ReturnStatus = require('int_ingenico/cartridge/scripts/config').ReturnStatus;
    var PaymentMethodsByID = require('int_ingenico/cartridge/scripts/config').PaymentMethodsByID;
    var transactions = (pdict.Order.getCustom().ING_transactionHistory?pdict.Order.getCustom().ING_transactionHistory:[]);
    var lastTransaction = (transactions.length > 0 ? JSON.parse(transactions[transactions.length-1]):{});
    var paymentStatus = require('int_ingenico/cartridge/scripts/utils/IngenicoOrderHelper').getStoredPaymentStatus(pdict.Order);
    var IngenicoPayments = require('int_ingenico/cartridge/scripts/order/IngenicoPayments');
    
    var refundIDs = pdict.Order.getCustom().ING_refundIDs;
    if(refundIDs.length > 0 && refundIDs.length != paymentStatus.refunds.length){
        refundIDs.filter(function(el){
            IngenicoPayments.getRefundStatus(pdict.Order.getOrderNo(), el);
        });
        paymentStatus = require('int_ingenico/cartridge/scripts/utils/IngenicoOrderHelper').getStoredPaymentStatus(pdict.Order);    
    }

    var availableToRefund = paymentStatus.payment.amount;
    var totalRefunded = 0;
    paymentStatus.refunds.filter(function(rfd){
        if(rfd.statusOutput.statusCategory == "UNSUCCESSFUL"){
            return false;
        }
        totalRefunded += rfd.amount;
    });

    availableToRefund -= totalRefunded;
    var currencySymbol = dw.util.Currency.getCurrency(pdict.Order.getCurrencyCode()).getSymbol()

    var test = 1;

</isscript>
<script>
    var orderno = "${pdict.Order.getOrderNo()}";
    var uuid = "${pdict.Order.getUUID()}";
    var tid = "${PaymentInstrumentInfo.getPaymentTransaction().getTransactionID()}"
    var maxRefund = ${availableToRefund};
</script>
<style>

    .payment_info_container {
        margin: 20px 0 50px;
    }

    .payment_info_container h2 {
        font-size: 1.5em !important;
        font-weight: 700;
    }
    .payment_info_container .summary {
        font-size:1.1em;
        margin-bottom:20px;
    }

    .payment_info_container .summary br {
        line-height:20px;
    }

    .actions a{
        width: 140px;
        display: inline-block;
        padding: 5px 10px;
        text-align: center;
        text-decoration: none;
        font-weight: 700;
        text-transform: uppercase;
        margin: 5px 5px 5px 0;
    }

    .actions a:first-child{
        margin: 5px 5px 5px 5px;
    }

    .actions a.approve{
        background: rgba(92,228,92,0.3);
        color: rgba(0,100,0,1);
        border: 1px solid rgba(0,100,0,0.5);        
    }

    .actions a.reject{
        background: rgba(228,92,92,0.3);
        color: rgba(100,0,0,1);
        border: 1px solid rgba(100,0,0,0.5);
    }

    .actions a.refund{
        background: rgba(92,92,228,0.3);
        color: rgba(0,0,100,1);
        border: 1px solid rgba(0,0,100,0.5);
    }

    .actions a.update{
        background: rgba(128,128,128,0.3);
        color: rgba(50,50,50,1);
        border: 1px solid rgba(50,50,50,0.5);
    }

    .actions a.cancel{
        background: rgba(128,128,128,0.3);
        color: rgba(50,50,50,1);
        border: 1px solid rgba(50,50,50,0.5);
    }

    .actions a.submit{
        background: rgba(92,228,92,0.3);
        color: rgba(0,100,0,1);
        border: 1px solid rgba(0,100,0,0.5);        
    }

    .overlay{
        position:fixed;
        top: 0;
        left:0;
        z-index: 1000;
        width: 100%;
        height: 100%;
        background: rgba(1,1,1,0.4);
        display: none;
    }

    .overlay.show{
        display: flex;
        flex-direction: row;
        align-items: center;
        text-align: center;
        justify-content: center;
    }

    .overlay .result {
        font-size: 3em;
        color: rgb(228,228,228);
    }

    .overlay .result.error span {
        color: pink;
        font-style: italic;
        display: block;
    }

    .overlay .modal {
        background: white;
        padding: 20px 20px 20px;
        border-radius: 15px;
    }

    .formentry {
        margin:10px;
    }

    .formentry label{
        margin-right: 15px;
    }

    .formentry input {
        border: 1px solid rgb(192,192,192);
        padding: 5px !important;
    }

    .formentry input.error {
        border: 1px solid red;
    }

    table.refund {
        text-align: center;
    }

    table.refund tr:first-child td {
        font-weight: 700;
    }

    table.refund td {
        padding:5px 10px;
    }


/* https://projects.lukehaas.me/css-loaders/ */
.loader,
.loader:before,
.loader:after {
  border-radius: 50%;
  width: 2.5em;
  height: 2.5em;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
  -webkit-animation: load7 1.8s infinite ease-in-out;
  animation: load7 1.8s infinite ease-in-out;
}
.loader {
  color: #77deff;
  font-size: 10px;
  margin: 10px auto 40px;
  position: relative;
  text-indent: -9999em;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-animation-delay: -0.16s;
  animation-delay: -0.16s;
}
.loader:before,
.loader:after {
  content: '';
  position: absolute;
  top: 0;
}
.loader:before {
  left: -3.5em;
  -webkit-animation-delay: -0.5s;
  animation-delay: -0.5s;
}
.loader:after {
  left: 3.5em;
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2;

}
@-webkit-keyframes load7 {
  0%,
  80%,
  100% {
    box-shadow: 0 2.5em 0 -1.3em;
  }
  40% {
    box-shadow: 0 2.5em 0 0;
  }
}
@keyframes load7 {
  0%,
  80%,
  100% {
    box-shadow: 0 2.5em 0 -1.3em;
  }
  40% {
    box-shadow: 0 2.5em 0 0;
  }
}	

</style>

<div class="payment_info_container">
    <h2>${Resource.msg('payment.info.title','ingenicoadmin',null)}</h2>
    <div class="summary">
        ${Resource.msg('payment.info.dates.status','ingenicoadmin',null)}: <b>${paymentStatus.payment.status || "Never checked"}</b>
        <br />
        ${Resource.msg('payment.info.dates.status.checked','ingenicoadmin',null)}: <i>${dw.util.StringUtils.formatCalendar( dw.util.Calendar(new Date(paymentStatus.payment.date)),"yyyy-MM-dd HH:mm") || "Never checked"}</i>
        <br />
        ${Resource.msg('payment.info.dates.status.changed','ingenicoadmin',null)}: <i>${paymentStatus.payment.statusOutput.statusCodeChangeDateTime || "Never changed"}</i>
        <br />
        ${Resource.msg('payment.info.method','ingenicoadmin',null)}: <i>${paymentStatus.payment.method?(PaymentMethodsByID[paymentStatus.payment.method] || "Unknown"):"Not set"} ${PaymentInstrumentInfo.getCreditCardNumberLastDigits() || ""}</i>
        <isif condition="${paymentStatus.payment.authCode != ''}">
            <br />
            ${Resource.msg('payment.info.authcode','ingenicoadmin',null)}: <i>${paymentStatus.payment.authCode}</i>
        </isif>
        
    </div>

    <div class="actions" style="margin-bottom:20px;">
        <isif condition="${pdict.Order.getCustom().ING_status == ReturnStatus.PENDING_FRAUD_APPROVAL}">
            <a href='#' class='approve' onclick='approveFraudOrder(event)'>${Resource.msg('action.table.action.approve','ingenicoadmin',null)}</a>
        </isif>
        <isif condition="${paymentStatus.payment.statusOutput.isCancellable}">
            <a href='#' class='reject' onclick='cancelPayment(event)'>${Resource.msg('action.table.action.reject','ingenicoadmin',null)}</a>
        </isif>
        <isif condition="${(paymentStatus.payment.statusOutput.isRefundable && availableToRefund > 0)}">
            <a href='#' class='refund' onclick='showRefund(event)'>${Resource.msg('action.table.action.refund.new','ingenicoadmin',null)}</a>
        </isif>
        <a href='#' class='update' onclick='updatePaymentStatus(event)'>${Resource.msg('action.table.action.status.update','ingenicoadmin',null)}</a>
    </div>


    <h2>${Resource.msg('payment.info.refunds.title','ingenicoadmin',null)}</h2>
    <div class="summary">
        <b>${Resource.msg('payment.info.refunds.total.refunded','ingenicoadmin',null)}:</b> ${currencySymbol + Number(totalRefunded).toFixed(2)}
        <br />
        <b>${Resource.msg('payment.info.refunds.total.available','ingenicoadmin',null)}:</b> ${currencySymbol + Number(availableToRefund).toFixed(2)}
    </div>
    <div>
    <isif condition="${paymentStatus.refunds.length == 0}" >
        ${Resource.msg('payment.info.refunds.empty','ingenicoadmin',null)}
    <iselse/>
        <table class="refund">
        <tr>
            <td>${Resource.msg('action.table.refunds.last.checked','ingenicoadmin',null)}</td>
            <td>${Resource.msg('action.table.refunds.last.changed','ingenicoadmin',null)}</td>
            <td>${Resource.msg('action.table.refunds.amount','ingenicoadmin',null)}</td>
            <td>${Resource.msg('action.table.refunds.status','ingenicoadmin',null)}</td>
            <td>${Resource.msg('action.table.refunds.actions','ingenicoadmin',null)}</td>
        </tr>
        <isloop items="${paymentStatus.refunds}" var="refund">
            <tr>
                <td>${dw.util.StringUtils.formatCalendar( dw.util.Calendar(new Date(refund.date)),"yyyy-MM-dd HH:mm")} UTC</td>
                <td>${refund.statusOutput.statusCodeChangeDateTime}</td>
                <td>${currencySymbol + Number(refund.amount).toFixed(2)}</td>
                <td>${refund.status}</td>
                <td>
                    <div class="actions">
                        <isif condition="${refund.statusOutput.isCancellable}">
                            <a href='#' class='reject' onclick='cancelRefund("${refund.id}", event)'>${Resource.msg('action.table.refunds.action.cancel','ingenicoadmin',null)}</a>
                        </isif>

                        <a href='#' class='update' onclick='updateRefundStatus("${refund.id}", event)'>${Resource.msg('action.table.refunds.action.status.update','ingenicoadmin',null)}</a>
                    </div>
                </td>
            </tr>
        </isloop>
        </table>
    </isif>
    </div>
</div>
<div class="overlay"></div>
<script id="refundform" type="text/x-jQuery-tmpl">
    <div class="modal" id='refunddata'>
        <h3>Refund Payment</h3>
        <div class="formentry">
            <label for="amount">${Resource.msg('form.refund.amount.label','ingenicoadmin',null)}</label>
            <input type="text" name="amount" value="" placeholder="${Resource.msg('form.refund.amount.placeholder','ingenicoadmin',null)}">
        </div>
        <div class="formentry">
            <label for="reason">${Resource.msg('form.refund.reason.label','ingenicoadmin',null)}</label>
            <input type="text" name="reason" value="" placeholder="${Resource.msg('form.refund.reason.placeholder','ingenicoadmin',null)}">
        </div>
        <div class="actions">
            <a href='#' class='cancel' onclick='closeModal(event)'>${Resource.msg('form.refund.action.cancel','ingenicoadmin',null)}</a>
            <a href='#' class='submit' onclick='createRefund(event)'>${Resource.msg('form.refund.action.submit','ingenicoadmin',null)}</a>
        </div>
    </div>
</script>
<script>

    function closeModal(ev){
        if(ev){
            ev.stopPropagation();
            ev.preventDefault();
        }
        jQuery('.overlay').removeClass('show').html("");
    }

    function updatePaymentStatus(ev){
        if(ev){
            ev.stopPropagation();
            ev.preventDefault();
        }

        jQuery('.overlay').toggleClass('show').html("<div class=\"loader\">Loading...</div>");
        jQuery.getJSON( "/on/demandware.store/Sites-Site/default/IngenicoActions-UpdateOrder?orderNo=" + orderno + "&UUID=" + uuid + "&tid=" + tid, function( data ) {
            if(!data || data.error){
                jQuery('.overlay').html("<div class='result error'>${Resource.msg('action.error','ingenicoadmin',null)} <span>" + data.errorMessage + "</span></div>");
                setTimeout(function() {
                    jQuery('.overlay').toggleClass('show').html("");
                }, 3000);
                return;
            }
      
            jQuery('.overlay').toggleClass('show').html("");
            location.reload();
        });
    }



    function approveFraudOrder(ev){
        if(ev){
            ev.stopPropagation();
            ev.preventDefault();
        }

        jQuery('.overlay').toggleClass('show').html("<div class=\"loader\">Loading...</div>");
        jQuery.getJSON( "/on/demandware.store/Sites-Site/default/IngenicoActions-ApproveOrderPendingFraud?orderNo=" + orderno + "&UUID=" + uuid, function( data ) {
            if(!data || data.error){
                jQuery('.overlay').html("<div class='result error'>${Resource.msg('action.error','ingenicoadmin',null)}<span>" + data.errorMessage + "</span></div>");
                setTimeout(function() {
                    jQuery('.overlay').toggleClass('show').html("");
                }, 3000);
                return;
            }

            jQuery('.overlay').toggleClass('show').html("");
            location.reload();

        });
    }

    function cancelPayment(ev){
        if(ev){
            ev.stopPropagation();
            ev.preventDefault();
        }
        
        jQuery('.overlay').toggleClass('show').html("<div class=\"loader\">Loading...</div>");
        jQuery.getJSON( "/on/demandware.store/Sites-Site/default/IngenicoActions-CancelTransaction?orderNo=" + orderno + "&UUID=" + uuid + "&tid=" + tid, function( data ) {
            window.data = data;
            if(!data || data.error){
                jQuery('.overlay').html("<div class='result error'>${Resource.msg('action.error','ingenicoadmin',null)} <span>" + data.errorMessage + "</span></div>");
                setTimeout(function() {
                    if(data.errors && data.errors["400210"]){
                        updatePaymentStatus()
                    }
                    jQuery('.overlay').toggleClass('show').html("");
                }, 3000);
                return;
            }
      
            jQuery('.overlay').toggleClass('show').html("");
            location.reload();
        });
    }

    function showRefund(ev){
        if(ev){
            ev.stopPropagation();
            ev.preventDefault();
        }
        var content = jQuery("#refundform").html();
        jQuery('.overlay').toggleClass('show').html(content);
    }

    function createRefund(ev){
        if(ev){
            ev.stopPropagation();
            ev.preventDefault();
        }

        var formData = jQuery('#refunddata').find('input'); 
        formData.removeClass("error");
        var missing = formData.filter(function(){return this.value == ""});
        if(missing.length > 0){
            missing.toggleClass("error");
            return;
        }
        var serialisedData = formData.serialize();

        jQuery('.overlay').html("<div class=\"loader\">Loading...</div>");
        jQuery.getJSON( "/on/demandware.store/Sites-Site/default/IngenicoActions-Refund?orderNo=" + orderno + "&UUID=" + uuid + "&tid=" + tid + "&" + serialisedData, function( data ) {
            if(!data || data.error){
                jQuery('.overlay').html("<div class='result error'>${Resource.msg('action.error','ingenicoadmin',null)} <span>" + data.errorMessage + "</span></div>");
                setTimeout(function() {
                    jQuery('.overlay').toggleClass('show').html("");
                }, 3000);
                return;
            }
      
            jQuery('.overlay').toggleClass('show').html("");
            location.reload();
        });
    }

    function updateRefundStatus(id, ev){
        if(ev){
            ev.stopPropagation();
            ev.preventDefault();
        }
        
        if(!id){
            return;
        }

        jQuery('.overlay').toggleClass('show').html("<div class=\"loader\">Loading...</div>");
        jQuery.getJSON( "/on/demandware.store/Sites-Site/default/IngenicoActions-RefundStatus?orderNo=" + orderno + "&UUID=" + uuid + "&rid=" + id, function( data ) {
            if(!data || data.error){
                jQuery('.overlay').html("<div class='result error'>${Resource.msg('action.error','ingenicoadmin',null)} <span>" + data.errorMessage + "</span></div>");
                setTimeout(function() {
                    jQuery('.overlay').toggleClass('show').html("");
                }, 3000);
                return;
            }
      
            jQuery('.overlay').toggleClass('show').html("");
            location.reload();
        });
    }

    function cancelRefund(id, ev){
        if(ev){
            ev.stopPropagation();
            ev.preventDefault();
        }
        
        if(!id){
            return;
        }

        jQuery('.overlay').toggleClass('show').html("<div class=\"loader\">Loading...</div>");
        jQuery.getJSON( "/on/demandware.store/Sites-Site/default/IngenicoActions-CancelRefund?orderNo=" + orderno + "&UUID=" + uuid + "&rid=" + id, function( data ) {
            if(!data || data.error){
                jQuery('.overlay').html("<div class='result error'>${Resource.msg('action.error','ingenicoadmin',null)} <span>" + data.errorMessage + "</span></div>");
                setTimeout(function() {
                    jQuery('.overlay').toggleClass('show').html("");
                }, 3000);
                return;
            }
      
            jQuery('.overlay').toggleClass('show').html("");
            location.reload();
        });
    }

</script>